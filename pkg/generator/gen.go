/*
This code generator is for producing the lookup table required for the
conversion of ARNs > Service IDs

If changes are required, update the resource_types_lookup.yaml file first
then run 'make generate'.
*/

package main

import (
	"bytes"
	"fmt"
	"go/format"
	"html/template"
	"os"

	"github.com/massdriver-cloud/aws-utils/pkg/awsresourcetypes"
	"gopkg.in/yaml.v3"
)

var templater = `
// This file was autogenerated. Do not edit it manually!
// Run 'make generate' from the base directory of this repo for changes.

package awsresourcetypes

var lookupTable = ServiceList{
	Services: map[string]Service{
		{{- range $serviceName, $service := .Services }}
		"{{ $serviceName }}": {
			ServiceName: "{{$service.ServiceName}}",
			Resources: map[string]string{
				{{ range $k, $v := $service.Resources -}}
				"{{ $k }}": "{{ $v }}",
				{{ end -}}
			},
		},
		{{ end }}
	},
}
`

func main() {
	resources, err := os.ReadFile("pkg/generator/resource_types_lookup.yaml")
	if err != nil {
		fmt.Println(err, "- run 'make generate' from the base directory of this repo")
		os.Exit(1)
	}

	var table awsresourcetypes.ServiceList

	err = yaml.Unmarshal(resources, &table)
	if err != nil {
		fmt.Println(err)
		os.Exit(1)
	}

	t, err := template.New("lookupTable").Parse(templater)
	if err != nil {
		fmt.Println(err)
		os.Exit(1)
	}

	var b bytes.Buffer

	err = t.Execute(&b, table)
	if err != nil {
		fmt.Println(err)
		os.Exit(1)
	}

	formatedBytes, err := format.Source(b.Bytes())
	if err != nil {
		fmt.Println(err)
		os.Exit(1)
	}

	f, err := os.Create("pkg/awsresourcetypes/zz_generated_lookuptable.go")
	if err != nil {
		fmt.Println(err)
		os.Exit(1)
	}

	_, err = f.Write(formatedBytes)
	if err != nil {
		fmt.Println(err)
		os.Exit(1)
	}
}
